#include <vector>
using namespace std;
void merge(vector<int> &a, int l, int m, int r)
{
   int n1 = m-l+1, n2 = r-m;
    int L[n1], R[n2];
    for(int i=0; i<n1; i++)
    L[i] = a[l+i];

    for(int i=0; i<n2; i++)
    R[i] = a[m+1+i];

   int i=0, j=0, k=l;
   while(i < n1 && j < n2)
   {
       if(L[i] <= R[j])
       {
        a[k] = L[i];
        i++;
       }
       else
       {
           a[k] = R[j];
           j++;
       }
       k++;
   }

   while(i < n1)
   {
       a[k] = L[i];
       i++;
       k++;
   }

   while(j < n2)
   {
       a[k] = R[j];
       j++;
       k++;
   }
}

void mergeSortUtil(vector<int> &a, int l, int r)
{
    if(l < r)
    {
        int m = (l+r)/2;

        mergeSortUtil(a, l, m);
        mergeSortUtil(a, m+1, r);

        merge(a, l, m, r);
    }
}


vector<int> mergeSort(vector<int> array) {
  mergeSortUtil(array, 0, array.size()-1);
	return array;
}
