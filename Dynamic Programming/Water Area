You're given an array of non-negative integers where each non-zero integer represents the height of a pillar of width 1 . Imagine water being poured over all of the pillars.
Write a function that returns the surface area of the water trapped between the pillars viewed from the front. Note that spilled water should be ignored.

example
INPUT :
heights = [0, 8, 0, 0, 5, 0, 0, 10, 0
OUTPUT :
48
// Below is a visual representation of
// The dots and vertical lines represe
// Note that there are 48 dots.
// |
// |
// |.....|
// |.....|
// |.....|
// |..|..|
// |..|..|
// |..|..|.....|
// |..|..|.....|
// _|..|..|..||.|


#include <vector>
using namespace std;

int waterArea(vector<int> heights) {
	if(heights.size() == 0)
		return 0;
	
 int l = 0, r = heights.size()-1, left_max = heights[l], 
	   right_max = heights[r], total  = 0;
	
	while(l < r)
	{
		if(heights[l] < heights[r])
		{
			l++;
			left_max = max(heights[l], left_max);
			total += left_max - heights[l];
		}
		
		else
		{
			r--;
			right_max = max(heights[r], right_max);
			total += right_max - heights[r];
		}
	}
	
	return total;
}
